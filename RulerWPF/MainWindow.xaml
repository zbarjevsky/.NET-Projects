<Window x:Class="MkZ.WPF.RulerWPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MkZ.WPF.RulerWPF"
        mc:Ignorable="d"
        WindowStyle="None"
        ResizeMode="CanResize"
        WindowState="Normal"
        AllowsTransparency="True"
        Topmost="True"
        Background="Transparent"
        WindowStartupLocation="CenterScreen"
        Loaded="MainWindow_OnLoaded"
        Closed="Window_Closed"
        LocationChanged="Window_LocationChanged"
        PreviewMouseMove="MainWindow_PreviewMouseMove"
        PreviewKeyDown="Window_PreviewKeyDown"
        Title="Ruler" Height="600" Width="1200">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" ResizeBorderThickness="5" />
    </WindowChrome.WindowChrome>

    <!-- Converters -->
    <Window.Resources>
        <local:ValueWithParameterToCheckedConverter x:Key="ValueWithParameterToCheckedConverter" />
    </Window.Resources>
    <Border BorderThickness="4" BorderBrush="Transparent">
    <Canvas x:Name="_canvasMain">
        <Canvas x:Name="_canvasRuler" Opacity="1.0" Background="Orange" Cursor="SizeAll" 
                RenderTransformOrigin="{Binding oRenderTransformOrigin}"
                PreviewMouseLeftButtonDown="_canvasRuler_PreviewMouseLeftButtonDown"
                PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp"
                Width="{Binding oWidth, FallbackValue=400}" Height="{Binding oHeight, FallbackValue=60}"  Canvas.Left="600" Canvas.Top="400" >
            <Canvas.RenderTransform>
                <TransformGroup>
                    <RotateTransform Angle="{Binding oAngle}"/>
                    <TranslateTransform X="{Binding oTranslateTransformX}" Y="{Binding oTranslateTransformY}"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Canvas.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Orientation: 0°" 
                              Click="AngleMenuItem_Click" Tag="0"
                              IsChecked="{Binding oAngle, Converter={StaticResource ValueWithParameterToCheckedConverter}, ConverterParameter='0' }" />
                    <MenuItem Header="Orientation: 90°" 
                              Click="AngleMenuItem_Click" Tag="90"
                              IsChecked="{Binding oAngle, Converter={StaticResource ValueWithParameterToCheckedConverter}, ConverterParameter='90' }" />
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Orientation: " VerticalAlignment="Center"/>
                                <TextBox Margin="1" MaxLength="5" Width="60" AcceptsReturn="True"
                                         TextAlignment="Center" MaxLines="1"
                                         Text="{Binding oAngleText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=250}"/>
                            </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="Pixels" 
                              Click="UnitsMenuItem_Click" Tag="0"
                              IsChecked="{Binding MeasurementUnits, Converter={StaticResource ValueWithParameterToCheckedConverter}, ConverterParameter='Pixels' }" />
                    <MenuItem Header="Inches"  
                              Click="UnitsMenuItem_Click" Tag="1"
                              IsChecked="{Binding MeasurementUnits, Converter={StaticResource ValueWithParameterToCheckedConverter}, ConverterParameter='Inches' }" />
                    <MenuItem Header="Centimeters"  
                              Click="UnitsMenuItem_Click" Tag="2"
                              IsChecked="{Binding MeasurementUnits, Converter={StaticResource ValueWithParameterToCheckedConverter}, ConverterParameter='Millimeters' }" />
                    <Separator />
                    <MenuItem>
                        <MenuItem.Header>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Display Size: " VerticalAlignment="Center"/>
                                <TextBox Margin="1" MaxLength="5" Width="60" AcceptsReturn="True"
                                        TextAlignment="Center" MaxLines="1"
                                        Text="{Binding oDisplayDiagonal, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=250}"/>
                                <TextBlock Text=" inches" VerticalAlignment="Center"/>
                             </StackPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <Separator />
                    <MenuItem Header="About WPF Ruler" Click="AboutMenuItem_Click" />
                    <MenuItem Header="Reset" Click="Reset_Click" />
                    <Separator />
                    <MenuItem Header="Exit" Click="ExitMenuItem_Click" />
                </ContextMenu>
            </Canvas.ContextMenu>
            <!-- Cursor Line Background for dragging-->
            <Border CornerRadius="10">
                <Line Visibility="{Binding oCursorLineVisibility, FallbackValue=Visible}"
                    X1="{Binding oCursorPosX, FallbackValue=100}" 
                    Y1="-20" 
                    X2="{Binding oCursorPosX, FallbackValue=100}" 
                    Y2="15" 
                    Opacity="0.01"
                    StrokeThickness="40" Stroke="White"/>
            </Border>
            <!-- Cursor Line-->
            <Line Visibility="{Binding oCursorLineVisibility, FallbackValue=Visible}"
                X1="{Binding oCursorPosX, FallbackValue=100}" 
                Y1="-20" 
                X2="{Binding oCursorPosX, FallbackValue=100}" 
                Y2="10" 
                StrokeThickness="0.8" Stroke="Black"/>
            <Canvas x:Name="_tics" />
            <TextBlock x:Name="_txtBounds" Canvas.Left="10" Canvas.Top="36" Text="X: 10, Y: 10, Length: 400" FontSize="16"/>
            <Thumb x:Name="thumbRotateLeft" Width="20" Height="20" Canvas.Left="10" Canvas.Top="20" 
                   Style="{StaticResource RoundThumbStyle}" Cursor="Hand"
                   PreviewMouseLeftButtonDown="thumbRotateLeft_MouseLeftButtonDown" 
                   PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp"/>
            <Thumb x:Name="thumbRotateRight" Width="20" Height="20" Canvas.Left="{Binding oThumbLeft, FallbackValue=375}" Canvas.Top="30" 
                   Style="{StaticResource RoundThumbStyle}" Cursor="Hand"
                   PreviewMouseLeftButtonDown="thumbRotateRight_PreviewMouseLeftButtonDown"
                   PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp"/>
            <Button x:Name="btnClose" Width="20" Height="20" Canvas.Left="{Binding oThumbLeft, FallbackValue=375}" Canvas.Top="5" 
                    Background="AliceBlue" Opacity="0.7" Cursor="Arrow"
                    PreviewMouseLeftButtonUp="btnClose_PreviewMouseLeftButtonUp"
                    Content="X" />
            <!-- Left Grip -->
            <Line x:Name="leftGrip" StrokeThickness="15" Stroke="DarkGoldenrod" Opacity="0.01" 
                  X1="0" Y1="0" X2="0" Y2="{Binding ActualHeight, ElementName=_canvasRuler}" 
                  Cursor="{Binding oSizeCursor, FallbackValue=SizeWE}"
                  PreviewMouseLeftButtonDown="LeftGrip_OnPreviewMouseLeftButtonDown" 
                  PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp"/>

            <!-- Left Grip Hair-->
            <Line StrokeThickness="1" Stroke="Black" Opacity="1"
                  X1="0" Y1="0" X2="0" Y2="{Binding ActualHeight, ElementName=_canvasRuler}"
                  Cursor="{Binding oSizeCursor, FallbackValue=SizeWE}"/>

            <!-- Right Grip -->
            <Line x:Name="rightGrip" ClipToBounds="False"
                    StrokeThickness="15" Stroke="DarkGoldenrod" Opacity="0.01"
                    X1="{Binding ActualWidth, ElementName=_canvasRuler}" 
                    Y1="0" 
                    X2="{Binding ActualWidth, ElementName=_canvasRuler}" 
                    Y2="{Binding ActualHeight, ElementName=_canvasRuler}" 
                    Cursor="{Binding oSizeCursor, FallbackValue=SizeWE}"
                    PreviewMouseLeftButtonDown="rightGrip_PreviewMouseLeftButtonDown" 
                    PreviewMouseLeftButtonUp="OnPreviewMouseLeftButtonUp"/>

            <!-- Right Grip Hair-->
            <Line ClipToBounds="False" StrokeThickness="0.8" Stroke="Black" Opacity="1"
                    X1="{Binding ActualWidth, ElementName=_canvasRuler}" 
                    Y1="0" 
                    X2="{Binding ActualWidth, ElementName=_canvasRuler}" 
                    Y2="{Binding ActualHeight, ElementName=_canvasRuler}" 
                    Cursor="{Binding oSizeCursor, FallbackValue=SizeWE}"/>
            </Canvas>
    </Canvas>
    </Border>
</Window>
