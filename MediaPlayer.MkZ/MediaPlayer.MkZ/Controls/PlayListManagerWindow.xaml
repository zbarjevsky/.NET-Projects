<Window x:Class="MkZ.MediaPlayer.Controls.PlayListManagerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MkZ.MediaPlayer.Controls"
        xmlns:utils="clr-namespace:MkZ.MediaPlayer.Utils"
        xmlns:mkz="clr-namespace:MkZ.WPF.DragDrop" 
        mc:Ignorable="d"
        WindowStartupLocation="CenterOwner"
        Loaded="Window_Loaded" FontSize="18" FontWeight="Normal"
        Closed="Window_Closed"
        Title="PlayList Manager" Height="450" Width="800">
    <Window.Resources>
        <ResourceDictionary>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Styles/CustomMenuStyle.xaml" />
                <ResourceDictionary Source="/Styles/ComboBoxDarkStyle.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250"/>
            <ColumnDefinition Width="5"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="45"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <DockPanel>
            <local:ButtonPlus Margin="4" Foreground="{StaticResource ButtonForegroundMain}"
                     HorizontalAlignment="Left"
                     ToolTip="Add New Play List" Click="ButtonAddRootPlayList_Click" />
        </DockPanel>
        <DockPanel Grid.Column="2">
            <local:ButtonBrowse Margin="4" Foreground="{StaticResource ButtonForegroundMain}" 
                                ToolTip="Open Files..." 
                                Command="ApplicationCommands.Open" />
            <local:ButtonPlayPause Margin="4" Foreground="{StaticResource ButtonForegroundMain}" 
                     HorizontalAlignment="Left" Command="MediaCommands.TogglePlayPause"
                     ToolTip="Tooggle Play Pause" ToolTipService.ShowOnDisabled="True" 
                     IsChecked="False"/>
            <ComboBox x:Name="_cmbPlayMode" Margin="10,7" ToolTip="Repeat Mode..." 
                      SelectedItem="{Binding SelectedItem.PlayMode, ElementName=_treePlayLists}"
                      Background="{StaticResource GradientBackground}" Foreground="{StaticResource ButtonForegroundMain}" 
                      Style="{StaticResource FlatComboBoxDark}" Text="Select One" IsReadOnly="True" MinWidth="60"
                      ItemsSource="{Binding Source={StaticResource PlayModeEnumValues}}"
                      FontSize="{StaticResource DefaultFontSize}" FontWeight="Medium" >
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            <local:ButtonSort x:Name="_btnSort" Margin="4" Foreground="{StaticResource ButtonForegroundMain}" 
                     HorizontalAlignment="Left" Click="ButtonSort_Click"
                     ToolTip="Sort Play List" ToolTipService.ShowOnDisabled="True" 
                     IsChecked="True" />
        </DockPanel>
        <TreeView Grid.Row="1" x:Name="_treePlayLists" ItemsSource="{Binding PlayListRoot}"
                  SelectedItemChanged="_treePlayLists_SelectedItemChanged">
            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Style.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LimeGreen"/>
                    </Style.Resources>
                    <Setter Property="IsExpanded" Value="True" />
                    <Setter Property="IsSelected" Value="{Binding IsSelectedPlayList, Mode=OneTime}" />
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.Resources>
                <DataTemplate x:Key="NormalTemplate">
                    <StackPanel Orientation="Horizontal" Margin="5,0">
                        <local:ButtonRoundCheckBox IsChecked="{Binding IsSelectedPlayList}" IsEnabled="False"
                                  VerticalAlignment="Center" />
                        <TextBlock Margin="4,0">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ({1})">
                                    <Binding Path="Name" />
                                    <Binding Path="MediaFiles.Count" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate x:Key="EditTemplate">
                    <Border Background="White" Margin="-1,0">
                        <Border CornerRadius="4" BorderThickness="0" BorderBrush="MidnightBlue" Padding="3">
                            <Border.Background>
                                <SolidColorBrush Color="SkyBlue" Opacity="1" />
                            </Border.Background>
                            <StackPanel Orientation="Horizontal" >
                                <local:ButtonRoundCheckBox IsChecked="{Binding IsSelectedPlayList}" 
                                      Margin="3,0"
                                      Foreground="Navy" VerticalAlignment="Center" />
                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" 
                                     FontWeight="Medium" BorderThickness="0" Background="Transparent" />
                                <local:ButtonPlus Margin="4,0,0,0" ToolTip="Add Sub Play List..."
                                    Foreground="DarkGoldenrod" VerticalAlignment="Top" Click="AddPlayList_Click" />
                                <local:SmallButtonClose Grid.Column="2" Margin="4,0" 
                                       ToolTip="Remove This Play List" ToolTipService.ShowOnDisabled="True"
                                       VerticalAlignment="Top" Foreground="Red" Click="RemovePlayList_Click">
                                    <Button.Style>
                                        <Style TargetType="Button">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsRoot}" Value="True">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </local:SmallButtonClose>
                            </StackPanel>
                        </Border>
                    </Border>
                </DataTemplate>
            </TreeView.Resources>
            <!-- Specify the template that will display a node
             from AnimalCategories.  I.e., one each for “Amphibians”
             and “Spiders” in this sample.  It will get its nested
             items from the "Animals" property of each item -->
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Path=PlayLists}">
                    <ContentPresenter Content="{Binding}">
                        <ContentPresenter.Style>
                            <Style TargetType="{x:Type ContentPresenter}">
                                <Setter Property="ContentTemplate" Value="{StaticResource  NormalTemplate}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsSelected, 
                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeViewItem}}}"
                                        Value="True">
                                        <Setter Property="ContentTemplate" Value="{StaticResource EditTemplate}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ContentPresenter.Style>
                    </ContentPresenter>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
        </TreeView>
        
        <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="0,2" Background="Goldenrod" HorizontalAlignment="Stretch"/>

        <ListView Grid.Row="1" Grid.Column="2" x:Name="_listMediaFiles" SelectionMode="Single"
                  ItemsSource="{Binding SelectedItem.MediaFiles, ElementName=_treePlayLists}" 
                  MouseDoubleClick="_listMediaFiles_MouseDoubleClick">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header=" x " Width="40" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <local:SmallButtonClose Grid.Column="2" Margin="4" Height="20"
                                      ToolTip="Remove From List"
                                      Foreground="Red" Click="RemoveMediaFile_Click"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Position" Width="Auto" >
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <TextBlock Text="{Binding PositionInSeconds, Converter={StaticResource SecondsToStringConverter}}"
                                               TextAlignment="Right" />
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="File Name" Width="Auto" >
                        <GridViewColumn.HeaderContainerStyle>
                            <Style TargetType="{x:Type GridViewColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Left" />
                            </Style>
                        </GridViewColumn.HeaderContainerStyle>
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox Text="{Binding FileName, Mode=OneWay, Converter={StaticResource PathToFileNameConverter}}"
                                         TextChanged="FileName_TextChanged"
                                         BorderThickness="0" Background="Transparent"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Path" DisplayMemberBinding="{Binding FileName}" Width="Auto" />
                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>
